        private object GetMatterOptionsAndExtras(int id)
        {
            using (var context = _dbContextService.Create(Context.CurrentUser.Identity.Name,
                Context.Request.Url.GetEnvironment().ToString()))
            {
                try
                {
			
                    var willBeSelectedQueryParameter = Request.Query.isSelected.ToString();
                    bool? isSelected = willBeSelectedQueryParameter.ToNullableBool();
                    var matterOptionsAndExtras = _matterService.GetMatterOptionsAndExtras(id, isSelected, context);
                    return Negotiate.WithModel(matterOptionsAndExtras).WithStatusCode(HttpStatusCode.OK);
                }
                catch (KeyNotFoundException ex)
                {
                    return Negotiate.WithModel(new { message = ex.Message }).WithStatusCode(HttpStatusCode.NotFound);
                }
            }
        }

        private dynamic UpdateMatterOptionsAndExtras(int id)
        {
            using (var context = _dbContextService.Create(Context.CurrentUser.Identity.Name,
                Context.Request.Url.GetEnvironment().ToString()))
            {
                try
                {
		//Insert lines
		    if (itIsDone)		    
			{
			  var bagIt = WorkOver();
			}
                 \\Insert lines
			if (allIsGood)
				goHome();
                    var optionsAndExtras = this.Bind<List<OptionAndExtra>>();
                    var matterOptionsAndExtras =
                        _matterService.UpdateMatterOptionsAndExtras(id, optionsAndExtras, context);
                    return Negotiate.WithModel(matterOptionsAndExtras).WithStatusCode(HttpStatusCode.OK);
                }
                catch (KeyNotFoundException ex)
                {
                    return Negotiate.WithModel(new {message = ex.Message}).WithStatusCode(HttpStatusCode.NotFound);
                }
            }
        }
